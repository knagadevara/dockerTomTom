version: '3.8'

networks:
    frontend:
    backend:

volumes:
    apache2-volume:
    mysql-volume:

configs:
  nginx_15july20:
    file: ./nginx.conf

services: 

    proxy-layer:
        image: nginx:stable-alpine
        networks: 
            - frontend
        ports:
            - "80:80"
        configs:
            - source: my_config
            - target: /etc/nginx/conf.d/default.conf           
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s

            mode: replicated
            replicas: 2
            placement:
                max_replicas_per_node: 1
                constraints:
                    - "node.role==worker"            

    web-layer:
        image: httpd:2.4-alpine
        volumes:
            - type: volume
              source: apache2-volume
              target: /var/www/html
        networks: 
            - frontend
            - backend
        ports:
            - "8080:80"
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
            mode: replicated
            replicas: 3
            placement:
                max_replicas_per_node: 1
                constraints:
                    - "node.role==worker"
    db-layer:
        image: mysql:8.0
        environment: 
            - MYSQL_ROOT_PASSWORD=killerJoy718293
        volumes:
            - type: volume
              source: mysql-volume
              target: /var/lib/mysql
        networks: 
            - backend
        ports:
            - "3306:3306"
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
            mode: replicated
            replicas: 1
            placement:
                max_replicas_per_node: 1
                constraints:
                    - "node.role==manager"